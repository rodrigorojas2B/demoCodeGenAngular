{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un analista funcional que trabaja con colecciones Postman y HDUs."
    },
    {
      "role": "user",
      "content": "\n\n--- HISTORIA DE USUARIO ---\nid: HDU-EMP-001\ntitulo: Prevenir eliminación de empleadas\nactor: Administrador del sistema\ndescripcion: \n  Como administrador del sistema,\n  quiero que no se permita eliminar empleados de género femenino,\n  para cumplir con la normativa interna de no eliminar registros históricos sensibles.\ncriterios_aceptacion:\n  - Si se intenta eliminar un empleado con género \"Femenino\", se debe lanzar una excepción o retornar un error controlado.\n  - Si el empleado es de género \"Masculino\" u otro valor, se permite la eliminación normal.\n  - El método de eliminación actual debe ser modificado para incluir esta validación.\n  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\nid: HDU-EMP-002\ntitulo: Empleados nacidos antes del 2000\nactor: Administrador del sistema\ndescripcion: \n  Como administrador del  sistema\n  quiero obtener una lista de empleados que hayan nacido antes del año 2000\n  para poder segmentar a los empleados  por generaciones y aplicar políticas diferenciadas\ncriterios_aceptacion:\n  - Se debe crear un nuevo end-point para esta consulta\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\nid: HDU-EMP-003\ntitulo: Empleados ordenados  por posición\nactor: Administrador del sistema\ndescripcion: \n  Como administrador del sistema\n  quiero obtener una lista de empleados agrupados por posición\n  para poder segmentar a contar cuantos empledos hay en cada posición\ncriterios_aceptacion:\n  - Se debe crear un nuevo end-point  para esta consulta\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\n--- ESPECIFICACIÓN API POSTMAN ---\n{\n    \"info\": {\n      \"name\": \"Colección Generada\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"deleteEmployee\",\n        \"request\": {\n          \"method\": \"DELETE\",\n          \"header\": [],\n          \"url\": {\n            \"raw\": \"http://localhost:8080/api/employees/{id}\",\n            \"protocol\": \"http\",\n            \"host\": [\"localhost\"],\n            \"port\": \"8080\",\n            \"path\": [\"api\",\"employees\",\"{id}\"]\n          }\n        }\n      }\n  ,\n      {\n        \"name\": \"getEmployeesBornBefore2000\",\n        \"request\": {\n          \"method\": \"GET\",\n          \"header\": [],\n          \"url\": {\n            \"raw\": \"http://localhost:8080/api/employees/born-before-2000\",\n            \"protocol\": \"http\",\n            \"host\": [\"localhost\"],\n            \"port\": \"8080\",\n            \"path\": [\"api\",\"employees\",\"born-before-2000\"]\n          }\n        }\n      }\n  ,\n      {\n        \"name\": \"getEmployeesOrderByPosition\",\n        \"request\": {\n          \"method\": \"GET\",\n          \"header\": [],\n          \"url\": {\n            \"raw\": \"http://localhost:8080/api/employees/order-by-position\",\n            \"protocol\": \"http\",\n            \"host\": [\"localhost\"],\n            \"port\": \"8080\",\n            \"path\": [\"api\",\"employees\",\"order-by-position\"]\n          }\n        }\n      }\n    ]\n  }\n\n--- INSTRUCCIONES ---\n\nTu tarea es analizar cada historia de usuario y determinar si puede ser implementada usando alguno de los endpoints definidos en la colección Postman (API REST).\n\nPara cada historia:\n- Indica si hay uno o más endpoints que la cubran.\n- Si sí, especifica:\n  - Método (GET, POST, etc.)\n  - Ruta\n  - Parámetros requeridos\n  - Observaciones (si necesita filtros, transformaciones, etc.)\n- Si no hay cobertura adecuada, indícalo claramente.\n\nEntrega los resultados en tabla Markdown:\n\n| Historia | Método | Endpoint | Parámetros | Cobertura | Observación |\n|----------|--------|----------|------------|-----------|-------------|\n"
    }
  ],
  "temperature": 0.2
}
